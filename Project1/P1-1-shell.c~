/*  <Sunny Patel>

This program finds George in a crowd. */

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[]) {
   int	             CrowdInts[1024];
   int	             NumInts, HatLoc, ShirtLoc;
   int               Load_Mem(char *, int *);

   if (argc != 2) {
     printf("usage: ./P1-1 valuefile\n");
     exit(1);
   }
   NumInts = Load_Mem(argv[1], CrowdInts);
   if (NumInts != 1024) {
      printf("valuefiles must contain 1024 entries\n");
      exit(1);
   }

   /* your code goes here. */
int i;
int j;
int z;
unsigned int x;
unsigned char y;
int store[4096];
	for (i=0; i<1024; i++) 
	{
		for (j=0; j<4;j++)	
		{
			for (z=0;z<4096;z++)
			{
				if (j==0) 
				{	
				x = (CrowdInts[i] & 0xFF000000); 
				y = x >> 24;
				store[z]=y;
				}
				else if (j==1) 
				{
				x = (CrowdInts[i] & 0x00FF0000); 
				y = x >> 16;
				store[z]=y;
				}
				else if (j==2) 
				{
				x = (CrowdInts[i] & 0x0000FF00); 
				y = x >> 8;
				store[z]=y;			
				}
				else 
				{
				store[z]=y;
				}
			}
		
		
		}
		
	}

   printf("George is located at: hat pixel %4d, shirt pixel 4%d.\n", HatLoc, ShirtLoc);
   exit(0);
}

/* This routine loads in up to 1024 newline delimited integers from
a named file in the local directory. The values are placed in the
passed integer array. The number of input integers is returned. */

int Load_Mem(char *InputFileName, int IntArray[]) {
   int	N, Addr, Value, NumVals;
   FILE	*FP;

   FP = fopen(InputFileName, "r");
   if (FP == NULL) {
      printf("%s could not be opened; check the filename\n", InputFileName);
      return 0;
   } else {
      for (N=0; N < 1024; N++) {
         NumVals = fscanf(FP, "%d: %d", &Addr, &Value);
         if (NumVals == 2)
            IntArray[N] = Value;
         else
            break;
      }
      fclose(FP);
      return N;
   }
}
